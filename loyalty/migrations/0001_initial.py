# Generated by Django 5.2.3 on 2025-08-15 14:29

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('background_color', models.CharField(blank=True, max_length=255, null=True)),
                ('foreground_color', models.CharField(blank=True, max_length=255, null=True)),
                ('label_color', models.CharField(blank=True, max_length=255, null=True)),
                ('logo_url', models.URLField(blank=True, null=True)),
                ('strip_image_url', models.URLField(blank=True, null=True)),
                ('icon_url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('points_system', models.CharField(blank=True, choices=[('points', 'points'), ('stamps', 'stamps')], max_length=255, null=True)),
                ('total_points', models.IntegerField(blank=True, default=0, null=True)),
            ],
            options={
                'db_table': 'configuration',
            },
        ),
        migrations.CreateModel(
            name='FieldDefinition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('data_type', models.CharField(blank=True, max_length=50, null=True)),
                ('suggested_section', models.CharField(blank=True, choices=[('header', 'header'), ('primary', 'primary'), ('secondary', 'secondary'), ('back', 'back'), ('auxiliary', 'auxiliary')], max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'field_definition',
            },
        ),
        migrations.CreateModel(
            name='LoyaltyCard',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('loyalty_points', models.IntegerField(blank=True, default=0, null=True)),
                ('authentication_token', models.UUIDField(blank=True, null=True)),
                ('web_service_url', models.CharField(blank=True, max_length=255, null=True)),
                ('serial_number', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_data', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reward_available', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive'), ('deleted', 'deleted')], default='active', max_length=255)),
            ],
            options={
                'db_table': 'loyalty_card',
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('business_name', models.CharField(blank=True, max_length=255, null=True)),
                ('business_description', models.TextField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'vendor',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('contact_number', models.CharField(max_length=255)),
                ('no_of_rewards', models.IntegerField(blank=True, default=0, null=True)),
                ('email', models.EmailField(max_length=255)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive'), ('deleted', 'deleted')], default='active', max_length=255)),
                ('loyalty_card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='customer', to='loyalty.loyaltycard')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='loyalty.vendor')),
            ],
            options={
                'db_table': 'customer',
            },
        ),
        migrations.CreateModel(
            name='PassTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('configuration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='loyalty.configuration')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='loyalty.vendor')),
            ],
            options={
                'db_table': 'pass_template',
            },
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('available', 'available'), ('availed', 'availed'), ('expired', 'expired')], default='active', max_length=255)),
                ('availed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='loyalty.customer')),
            ],
            options={
                'db_table': 'reward',
            },
        ),
        migrations.CreateModel(
            name='TemplateField',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('field_type', models.CharField(blank=True, choices=[('header', 'header'), ('primary', 'primary'), ('secondary', 'secondary'), ('back', 'back'), ('auxiliary', 'auxiliary')], max_length=20, null=True)),
                ('position', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('field_definition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='loyalty.fielddefinition')),
                ('pass_template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='loyalty.passtemplate')),
            ],
            options={
                'db_table': 'template_field',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(blank=True, choices=[('points', 'points'), ('stamps', 'stamps')], max_length=255, null=True)),
                ('transaction_points', models.IntegerField(blank=True, default=0, null=True)),
                ('transaction_amount', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('points_remaining', models.IntegerField(blank=True, default=0, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='loyalty.customer')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='loyalty.vendor')),
            ],
            options={
                'db_table': 'transaction',
            },
        ),
    ]
