"""
Django settings for tap project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from datetime import timedelta
from pathlib import Path
from dotenv import load_dotenv
import os
load_dotenv()
from corsheaders.defaults import default_headers

CORS_ALLOW_HEADERS = list(default_headers) + [
    "ngrok-skip-browser-warning",
]

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-d!_dm5twvvobi%-7jfdlyyxz+10#^n#lxx@5@_ipgq7*@y#0s^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]
WALLETPASS_CONF = {
    "APPLE_WWDRCA_PEM_PATH": str(BASE_DIR / "certs" / "wwdr.pem"),
    "WALLETPASS_PUSH_CLASS": "django_walletpass.services.PushBackend",
    "TOKEN_AUTH_KEY_PATH": str(BASE_DIR / "certs" / "Production_APN_Key.p8"),
    "TOKEN_AUTH_KEY_ID": "72F6C4L7BL",
    "TEAM_ID": os.getenv("TEAM_ID"),
    "PASS_TYPE_ID": os.getenv("PASS_TYPE_ID"),
    "PUSH_SANDBOX": False, 
}
# Ensure APNs credentials are available as environment variables for aioapns/django_walletpass
os.environ["TOKEN_AUTH_KEY_ID"] = WALLETPASS_CONF["TOKEN_AUTH_KEY_PATH"]
os.environ["TOKEN_AUTH_KEY_ID"] = WALLETPASS_CONF["TOKEN_AUTH_KEY_ID"]
os.environ["APNS_TEAM_ID"] = WALLETPASS_CONF["TEAM_ID"]

# Patch django_walletpass.settings.dwpconfig at runtime to ensure correct config is always used
try:
    import django_walletpass.settings as dwp_settings
    dwp_settings.dwpconfig.update(WALLETPASS_CONF)
except Exception as e:
    print("[WARNING] Could not patch django_walletpass.settings.dwpconfig:", e)
WALLETPASS = {
    "CERT_PATH": str(BASE_DIR / "certs" / "signerCert.pem"),
    "KEY_PATH": str(BASE_DIR / "certs" / "signerKey.key"),
    "KEY_PASSWORD": None,
    "PASS_TYPE_ID" : os.getenv("PASS_TYPE_ID"),
    "TEAM_ID" : os.getenv("TEAM_ID"),
    "PUSH_SANDBOX" : False,
    "TOKEN_AUTH_KEY_PATH": str(BASE_DIR / "certs" / "Production_APN_Key.p8"),
    "TOKEN_AUTH_KEY_ID": "72F6C4L7BL",
    "ORGANIZATION_NAME" : os.getenv("ORGANIZATION_NAME"),
}
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'loyalty',
    'django_walletpass',
    'rest_framework',
    'corsheaders',
    'storages',
]

AWS_ACCESS_KEY_ID = os.getenv("AWS_ACCESS_KEY_ID")
AWS_SECRET_ACCESS_KEY = os.getenv("AWS_SECRET_ACCESS_KEY")
AWS_STORAGE_BUCKET_NAME = os.getenv("AWS_STORAGE_BUCKET_NAME")
AWS_S3_REGION_NAME = os.getenv("AWS_S3_REGION_NAME")
AWS_S3_CUSTOM_DOMAIN = os.getenv("AWS_S3_CUSTOM_DOMAIN")

STORAGES = {
    "default": {
        "BACKEND": "django.core.files.storage.FileSystemStorage",
        "OPTIONS": {
            "location": BASE_DIR / "media",
            "base_url": "/media/",
        },
    },
    "s3": {
        "BACKEND": "storages.backends.s3.S3Storage",
        "OPTIONS": {
            "AWS_S3_OBJECT_PARAMETERS": {
                "CacheControl": "max-age=86400",
            },
        },
    },
    "staticfiles": {
        "BACKEND": "storages.backends.s3.S3Storage",
        "OPTIONS": {
        },
    },
}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'loyalty.authentication.CookieJWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
}

CORS_ALLOW_ALL_ORIGINS = True
# Optionally, comment out or remove CORS_ALLOWED_ORIGIN_REGEXES if not needed
# CORS_ALLOWED_ORIGIN_REGEXES = []


CORS_EXPOSE_HEADERS = [
    'set-cookie',
    'access-control-allow-credentials',
    'access-control-allow-origin',
    'access-control-allow-methods',
    'access-control-allow-headers',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'tap.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tap.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=15),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=30),
}